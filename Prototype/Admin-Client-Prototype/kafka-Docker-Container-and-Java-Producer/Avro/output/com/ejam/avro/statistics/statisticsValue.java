/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.ejam.avro.statistics;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class statisticsValue extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"statisticsValue\",\"namespace\":\"com.ejam.avro.statistics\",\"fields\":[{\"name\":\"ErrorTotal\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"Rate\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"Source\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"Total\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"Date\",\"type\":{\"type\":\"long\",\"logicalType\":\"local-timestamp-millis\"}},{\"name\":\"Verifier\",\"type\":\"boolean\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.Integer ErrorTotal;
  @Deprecated public java.lang.Integer Rate;
  @Deprecated public java.lang.CharSequence id;
  @Deprecated public java.lang.CharSequence Source;
  @Deprecated public java.lang.Integer Total;
  @Deprecated public long Date;
  @Deprecated public boolean Verifier;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public statisticsValue() {}

  /**
   * All-args constructor.
   */
  public statisticsValue(java.lang.Integer ErrorTotal, java.lang.Integer Rate, java.lang.CharSequence id, java.lang.CharSequence Source, java.lang.Integer Total, java.lang.Long Date, java.lang.Boolean Verifier) {
    this.ErrorTotal = ErrorTotal;
    this.Rate = Rate;
    this.id = id;
    this.Source = Source;
    this.Total = Total;
    this.Date = Date;
    this.Verifier = Verifier;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return ErrorTotal;
    case 1: return Rate;
    case 2: return id;
    case 3: return Source;
    case 4: return Total;
    case 5: return Date;
    case 6: return Verifier;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: ErrorTotal = (java.lang.Integer)value$; break;
    case 1: Rate = (java.lang.Integer)value$; break;
    case 2: id = (java.lang.CharSequence)value$; break;
    case 3: Source = (java.lang.CharSequence)value$; break;
    case 4: Total = (java.lang.Integer)value$; break;
    case 5: Date = (java.lang.Long)value$; break;
    case 6: Verifier = (java.lang.Boolean)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'ErrorTotal' field.
   */
  public java.lang.Integer getErrorTotal() {
    return ErrorTotal;
  }

  /**
   * Sets the value of the 'ErrorTotal' field.
   * @param value the value to set.
   */
  public void setErrorTotal(java.lang.Integer value) {
    this.ErrorTotal = value;
  }

  /**
   * Gets the value of the 'Rate' field.
   */
  public java.lang.Integer getRate() {
    return Rate;
  }

  /**
   * Sets the value of the 'Rate' field.
   * @param value the value to set.
   */
  public void setRate(java.lang.Integer value) {
    this.Rate = value;
  }

  /**
   * Gets the value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'Source' field.
   */
  public java.lang.CharSequence getSource() {
    return Source;
  }

  /**
   * Sets the value of the 'Source' field.
   * @param value the value to set.
   */
  public void setSource(java.lang.CharSequence value) {
    this.Source = value;
  }

  /**
   * Gets the value of the 'Total' field.
   */
  public java.lang.Integer getTotal() {
    return Total;
  }

  /**
   * Sets the value of the 'Total' field.
   * @param value the value to set.
   */
  public void setTotal(java.lang.Integer value) {
    this.Total = value;
  }

  /**
   * Gets the value of the 'Date' field.
   */
  public java.lang.Long getDate() {
    return Date;
  }

  /**
   * Sets the value of the 'Date' field.
   * @param value the value to set.
   */
  public void setDate(java.lang.Long value) {
    this.Date = value;
  }

  /**
   * Gets the value of the 'Verifier' field.
   */
  public java.lang.Boolean getVerifier() {
    return Verifier;
  }

  /**
   * Sets the value of the 'Verifier' field.
   * @param value the value to set.
   */
  public void setVerifier(java.lang.Boolean value) {
    this.Verifier = value;
  }

  /** Creates a new statisticsValue RecordBuilder */
  public static com.ejam.avro.statistics.statisticsValue.Builder newBuilder() {
    return new com.ejam.avro.statistics.statisticsValue.Builder();
  }
  
  /** Creates a new statisticsValue RecordBuilder by copying an existing Builder */
  public static com.ejam.avro.statistics.statisticsValue.Builder newBuilder(com.ejam.avro.statistics.statisticsValue.Builder other) {
    return new com.ejam.avro.statistics.statisticsValue.Builder(other);
  }
  
  /** Creates a new statisticsValue RecordBuilder by copying an existing statisticsValue instance */
  public static com.ejam.avro.statistics.statisticsValue.Builder newBuilder(com.ejam.avro.statistics.statisticsValue other) {
    return new com.ejam.avro.statistics.statisticsValue.Builder(other);
  }
  
  /**
   * RecordBuilder for statisticsValue instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<statisticsValue>
    implements org.apache.avro.data.RecordBuilder<statisticsValue> {

    private java.lang.Integer ErrorTotal;
    private java.lang.Integer Rate;
    private java.lang.CharSequence id;
    private java.lang.CharSequence Source;
    private java.lang.Integer Total;
    private long Date;
    private boolean Verifier;

    /** Creates a new Builder */
    private Builder() {
      super(com.ejam.avro.statistics.statisticsValue.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.ejam.avro.statistics.statisticsValue.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.ErrorTotal)) {
        this.ErrorTotal = data().deepCopy(fields()[0].schema(), other.ErrorTotal);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.Rate)) {
        this.Rate = data().deepCopy(fields()[1].schema(), other.Rate);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.id)) {
        this.id = data().deepCopy(fields()[2].schema(), other.id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.Source)) {
        this.Source = data().deepCopy(fields()[3].schema(), other.Source);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.Total)) {
        this.Total = data().deepCopy(fields()[4].schema(), other.Total);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.Date)) {
        this.Date = data().deepCopy(fields()[5].schema(), other.Date);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.Verifier)) {
        this.Verifier = data().deepCopy(fields()[6].schema(), other.Verifier);
        fieldSetFlags()[6] = true;
      }
    }
    
    /** Creates a Builder by copying an existing statisticsValue instance */
    private Builder(com.ejam.avro.statistics.statisticsValue other) {
            super(com.ejam.avro.statistics.statisticsValue.SCHEMA$);
      if (isValidValue(fields()[0], other.ErrorTotal)) {
        this.ErrorTotal = data().deepCopy(fields()[0].schema(), other.ErrorTotal);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.Rate)) {
        this.Rate = data().deepCopy(fields()[1].schema(), other.Rate);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.id)) {
        this.id = data().deepCopy(fields()[2].schema(), other.id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.Source)) {
        this.Source = data().deepCopy(fields()[3].schema(), other.Source);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.Total)) {
        this.Total = data().deepCopy(fields()[4].schema(), other.Total);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.Date)) {
        this.Date = data().deepCopy(fields()[5].schema(), other.Date);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.Verifier)) {
        this.Verifier = data().deepCopy(fields()[6].schema(), other.Verifier);
        fieldSetFlags()[6] = true;
      }
    }

    /** Gets the value of the 'ErrorTotal' field */
    public java.lang.Integer getErrorTotal() {
      return ErrorTotal;
    }
    
    /** Sets the value of the 'ErrorTotal' field */
    public com.ejam.avro.statistics.statisticsValue.Builder setErrorTotal(java.lang.Integer value) {
      validate(fields()[0], value);
      this.ErrorTotal = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'ErrorTotal' field has been set */
    public boolean hasErrorTotal() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'ErrorTotal' field */
    public com.ejam.avro.statistics.statisticsValue.Builder clearErrorTotal() {
      ErrorTotal = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'Rate' field */
    public java.lang.Integer getRate() {
      return Rate;
    }
    
    /** Sets the value of the 'Rate' field */
    public com.ejam.avro.statistics.statisticsValue.Builder setRate(java.lang.Integer value) {
      validate(fields()[1], value);
      this.Rate = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'Rate' field has been set */
    public boolean hasRate() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'Rate' field */
    public com.ejam.avro.statistics.statisticsValue.Builder clearRate() {
      Rate = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'id' field */
    public java.lang.CharSequence getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public com.ejam.avro.statistics.statisticsValue.Builder setId(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.id = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'id' field */
    public com.ejam.avro.statistics.statisticsValue.Builder clearId() {
      id = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'Source' field */
    public java.lang.CharSequence getSource() {
      return Source;
    }
    
    /** Sets the value of the 'Source' field */
    public com.ejam.avro.statistics.statisticsValue.Builder setSource(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.Source = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'Source' field has been set */
    public boolean hasSource() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'Source' field */
    public com.ejam.avro.statistics.statisticsValue.Builder clearSource() {
      Source = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'Total' field */
    public java.lang.Integer getTotal() {
      return Total;
    }
    
    /** Sets the value of the 'Total' field */
    public com.ejam.avro.statistics.statisticsValue.Builder setTotal(java.lang.Integer value) {
      validate(fields()[4], value);
      this.Total = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'Total' field has been set */
    public boolean hasTotal() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'Total' field */
    public com.ejam.avro.statistics.statisticsValue.Builder clearTotal() {
      Total = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'Date' field */
    public java.lang.Long getDate() {
      return Date;
    }
    
    /** Sets the value of the 'Date' field */
    public com.ejam.avro.statistics.statisticsValue.Builder setDate(long value) {
      validate(fields()[5], value);
      this.Date = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'Date' field has been set */
    public boolean hasDate() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'Date' field */
    public com.ejam.avro.statistics.statisticsValue.Builder clearDate() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'Verifier' field */
    public java.lang.Boolean getVerifier() {
      return Verifier;
    }
    
    /** Sets the value of the 'Verifier' field */
    public com.ejam.avro.statistics.statisticsValue.Builder setVerifier(boolean value) {
      validate(fields()[6], value);
      this.Verifier = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'Verifier' field has been set */
    public boolean hasVerifier() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'Verifier' field */
    public com.ejam.avro.statistics.statisticsValue.Builder clearVerifier() {
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public statisticsValue build() {
      try {
        statisticsValue record = new statisticsValue();
        record.ErrorTotal = fieldSetFlags()[0] ? this.ErrorTotal : (java.lang.Integer) defaultValue(fields()[0]);
        record.Rate = fieldSetFlags()[1] ? this.Rate : (java.lang.Integer) defaultValue(fields()[1]);
        record.id = fieldSetFlags()[2] ? this.id : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.Source = fieldSetFlags()[3] ? this.Source : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.Total = fieldSetFlags()[4] ? this.Total : (java.lang.Integer) defaultValue(fields()[4]);
        record.Date = fieldSetFlags()[5] ? this.Date : (java.lang.Long) defaultValue(fields()[5]);
        record.Verifier = fieldSetFlags()[6] ? this.Verifier : (java.lang.Boolean) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
